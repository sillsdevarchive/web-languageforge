# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
#if [ ! -f "/usr/bin/unattended-upgrade-org" ]; then
#  killall unattended-upgrade
#  cp /usr/bin/unattended-upgrade /usr/bin/unattended-upgrade-org
#  > /usr/bin/unattended-upgrade
#  killall unattended-upgrade
#  rm -f /var/lib/apt/lists/lock
#  rm -f /var/lib/apt/lists/*
#fi

apt-get update
apt-get -y install software-properties-common python-software-properties
add-apt-repository ppa:ansible/ansible
apt-get update
apt-get -y install git ansible

cd /home/vagrant/src
if [ ! -d "web-languageforge" ]; then
  git clone --depth=100 --recurse-submodules https://github.com/sil-student-projects/web-languageforge.git 
else
  cd web-languageforge; git pull --ff-only --recurse-submodules 
fi

cd /home/vagrant/src/web-languageforge/deploy/; git checkout master-taylor; ansible-playbook -i hosts playbook_create_config.yml; chown vagrant.vagrant ansible.cfg; ansible-playbook -i hosts playbook_xenial_server_vagrant.yml

SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "kaorimatz/ubuntu-16.04-amd64"
  # Less secure but will work on NTFS which doesn't understand permissions / owner very well
  config.ssh.insert_key = false

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://atlas.hashicorp.com/kaorimatz/ubuntu-16.04-amd64"

  config.vm.define "xenial_server_taylor2017"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/home/vagrant/src",
    id: "vagrant-root",
    owner: "vagrant",
    group: "www-data",
    mount_options: ["dmode=775,fmode=664"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :virtualbox do |vb|
    # Don't boot with headless mode
    vb.gui = true
  
    # Use VBoxManage to customize the VM. For example to change memory:
    vb.customize ["modifyvm", :id, "--memory", "4096"]
    vb.customize ["modifyvm", :id, "--vram", 64]
    vb.customize ["modifyvm", :id, "--accelerate3d", "off"]
  end

  # configure Vagrant's ssh shell to be a non-login one (avoids error "stdin: is not a tty error")
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
  config.vm.provision "shell", inline: $script

#  config.vm.provision :ansible do |ansible|
#    ansible.playbook = '../playbook_debian.yml'
#    ansible.extra_vars = { ansible_ssh_user: 'vagrant', vagrant: true }
#    ansible.verbose = 'v'
#  end
  
end
