@import '../../../../../node_modules/bootstrap/scss/functions';
@import '../../../../../node_modules/bootstrap/scss/variables';
@import '../../../../../node_modules/bootstrap/scss/mixins';

@import '../../../../Site/views/languageforge/theme/default/sass/variables';
@import 'comment/dc-comment';
@import 'field/dc-audio';
@import 'field/dc-text';
@import 'field/dc-multioptionlist';
@import 'field/dc-multiparagraph';
@import 'field/dc-multitext';
@import 'field/dc-picture';
@import 'field/dc-rendered';
@import 'field/dc-semanticdomain';

.lexAppToolbar {
    border: 1px solid $line-color;
    margin: 10px 0 20px;
    padding: 4px;
    width: 100%;
    float: left;
    background-color: #f6f6f6;
    border-radius: $border-radius;
  #toggleActivityFeed {
    position: relative;
    .activity-count {
      color: #fff;
      position: absolute;
      top: -3px;
      right: -3px;
      background: #1d64f0;
      border-radius: 50%;
      width: 18px;
      height: 18px;
      font-size: 10px;
      display: block;
      line-height: 18px;
      text-align: center;
      font-weight: normal;
      padding: 0;
    }
  }
}
.hdrnav .hdrnav-container {
    float: left;
    width: 100%;
    .btn-group {
        margin-left: 10px;
    }
}
form .wsid {
    width: 60px;
    max-width: 60px;
    text-align: right;
}

@include media-breakpoint-down(sm) {
    .dc-rendered-word {
        display: block;
    }
    .hdrnav .return-button {
        float: left;
    }
    #lexAppCommentView .entryItemView, #lexAppCommentView .commentListView {
        max-height: none ;
        height: auto;
    }
}

fieldset.comment-filter {
    margin: 20px;
    border: 2px groove threedface;
}

legend.override-bootstrap {
    width: auto;
    margin: inherit;
    margin-left: 20px;
    padding-left: 5px;
    padding-right: 5px;
    padding-top: inherit;
    padding-bottom: inherit;
    border: 0;
    font-size: inherit;
    line-height: inherit;
}

.override-bootstrap.filter-controls {
    margin-bottom: 5px;
}

.filter-controls-inner {
    margin: 0 5px 5px 5px;
}

.filter-controls-inner.collapse.in {
    /* When div is not collapsed, and ONLY when it is not collapsed, override "overflow: hidden".
    This is required so that the date picker popup can be shown. */
    overflow: inherit;
}

/*animate*/
.animate-switch-container {
    position: relative;
    height: 665px;
    overflow: hidden;
}


.animate-switch.ng-animate {
    -webkit-transition: all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
    -moz-transition: all cubic-bezier(0.250, 0.460, 0.450, 0.040) 0.5s;
    transition: all ease-in 0.5s;
    position: relative;
    display: block;
}

.animate-switch.ng-leave.ng-leave-active,
.animate-switch.ng-enter {
    /*animation: moveToLeft .5s ease-in;*/
    right: 721px;
}

.animate-switch.ng-leave,
.animate-switch.ng-enter.ng-enter-active {
    /*animation: moveToRight .5s ease-in;*/
    right: 0;
}

/* This is TODO for getting the scroll bars to line up in the animation
.animate-switch.moveToLeft {
    -webkit-animation: moveToLeft .5s ease both;
    animation: moveToLeft .5s ease both;
}

.animate-switch.moveToRight {
    -webkit-animation: moveToRight .5s ease both;
    animation: moveToRight .5s ease both;
}

******************** keyframes ***************************************

@-webkit-keyframes moveToLeft {
    from { margin-right: 100%; width: 100%; }
    to { margin-right: 22%; width:22%; }
}
@keyframes moveToLeft {
    from { margin-right: 100%; width: 100%; }
    to { margin-right: 22%; width:22%; }
}

@-webkit-keyframes moveToRight {
    from { margin-right: 22%; width: 22%; }
    to { margin-right: 100%; width:100%; }
}
@keyframes moveToRight {
    from { margin-right: 22%; width: 22%; }
    to { margin-right: 100%; width:100%; }
}

@-webkit-keyframes moveToLeft {
    from { }
    to { -webkit-transform: translateX(-100%); }
}
@keyframes moveToLeft {
    from { }
    to { -webkit-transform: translateX(-100%); transform: translateX(-100%); }
}

@-webkit-keyframes moveToRight {
    from { }
    to { -webkit-transform: translateX(100%); }
}
@keyframes moveToRight {
    from { }
    to { -webkit-transform: translateX(100%); transform: translateX(100%); }
}



/*********************************************************/

.override-bootstrap input[type="checkbox"] {
    text-align: center;
    margin-top: 0;
    margin-right: 4px;
}

.datepicker input {
    text-align: center;
    margin-bottom: 0;
}

.datepicker label {
    display: inline;
}

.text-center {
    /* Date picker uses this class for its week numbers */
    text-align: center;
}

.datepicker table th, .datepicker table td {
    /* Override lf.css */
    padding: 1px;
}

.datepicker table th button.float-left, .datepicker table th button.float-right {
    padding: 2px 13px;
}

.datepicker button i {
    /* Override ls.css */
    margin-right: 0;
}

.datepicker table tbody tr:hover, .datepicker table tbody tr.altrow:hover {
    /* Override lf.css */
    background-color: inherit;
}

.datepicker th button, .datepicker td button {
    /* Override bootstrap.css */
    background: #fff;
}

.datepicker th button.btn-info, .datepicker td button.btn-info {
    /* Un-override bootstrap.css for btn-info */
    background-color: #49afcd;
}

.filter-controls button i {
    /* Override lf.css */
    margin-right: 0;
}

.filter-controls .horiz-controls {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start; /* Or try space-between */
    margin-bottom: 10px;
}

.filter-controls .horiz-controls.flex-center {
    justify-content: center; /* Or try space-between */
}

.filter-controls .horiz-controls .horiz-flex-element {
    margin: 0 10px;
}

.filter-controls .horiz-controls {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start; /* Or try space-between */
}

.filter-controls .horiz-controls .self-flex-end {
    align-self: flex-end;
}

.filter-controls .top-right-corner {
    position: absolute;
    top: 0; /* Might need to increase this once the "For the demo, these do NOT work" text goes away */
    right: 10px;
}

dc-entry .card {
    margin-bottom: 1rem;
}

#entryList {
    /* Override palaso-ui.scss */
    /*    height: auto !important;*/
    height: 550px;
    margin-bottom: 20px;
}

#entryList .table {
    margin-bottom: 0;
}

.outer-flex {
    display: flex;
    flex-direction: row;
    align-items: stretch;
}

.lexiconHeaderContainer {
    width: 100%;
    display: flex;
    flex-flow: row;
    justify-content: space-between;
}

#lexAppListView {
    margin-top: 20px;
    .lexiconListItem {
        cursor: pointer;
        h5 {
            margin: 0;
        }
    }
    .lexiconItemListContainer {
        height: 460px;
        overflow: auto;
        margin-bottom: 15px;
    }
    .lexiconListItem.active {
        cursor: default;
    }
    .no-entries .btn {
        margin: 0 20px 10px 0;
    }
    .no-entries .btn:last-child {
        margin-right: 0;
    }
}

.uneditable-input {
    cursor: auto;
    color: inherit;
    background-color: white;
}

#lexAppEditView {
  .lexiconItemListContainer {
    max-height: 460px;
    overflow: auto;
  }
  .word-definition-title {
    margin-bottom: 5px;
    padding: 0 0 24px;
    h3 {
      margin: -7px 0 10px;
      font-size: 24px;
    }
  }
  .card-body .addItem {
    margin-right: 0;
  }
  .topAddMeaning {
    margin-bottom: 14px;
  }
  .list-group-item:not(.list-group-item-action) {
    cursor: pointer;
  }
  .listItemPrimary {
    text-align: initial;
    z-index: 2;
    font-size: 1.0em;
  }
  .listItemSecondary {
    z-index: 2;
    font-size: 0.8em;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  .deleteX {
    .fa {
      cursor: pointer;
    }
    .fa:hover {
      color: red;
    }
  }
  h5 {
    margin: 0;
  }
  .entry-words-minimized {
    position: absolute;
    z-index: 1;
    opacity: 0;
    transition: all 0.5s;
    transform: rotate(90deg);
    transform-origin: left;
    margin-left: 5px;
  }
  > .container,
  .entries-list-container,
  .entry-primary-container {
    transition: all 0.5s;
  }
  @include media-breakpoint-between(md, lg) {
    &.right-panel-visible {
      > .container {
        max-width: 634px;
      }
      .entries-list-container {
        flex: 0 0 50px;
        overflow: hidden;
        .entry-words-minimized {
          opacity: 1;
        }
        .entry-words-container {
          opacity: 0;
          overflow: hidden;
          width: 0;
          height: 0;
        }
      }
      .entry-primary-container {
        flex: 0 0 calc(100% - 50px);
        max-width: 100%;
      }
    }
    &.panel-closing {
      > .container,
      .entries-list-container,
      .entry-primary-container {
        transition-delay: 0.5s;
        overflow: hidden;
      }
      .entry-words-minimized {
        margin-left: -50px;
      }
      .entry-words-container {
        transition: opacity 0.5s ease-in-out 1s;
      }
      .entries-list-container {
        overflow: hidden;
      }
    }
  }
  .right-panel-list {
    width: 0;
    transition: width 0.5s ease-in-out, margin-left 0.5s ease-in-out;
    margin-left: 0;
    position: relative;
    .right-panel {
      position: absolute;
      transition: opacity 0.5s linear 0.5s;
      opacity: 1;
      height: 100%;
      top: 0;
      width: 100%;
      &.panel-closing {
        transition: width 0.5s ease-in-out 0.5s, margin-left 0.5s ease-in-out 0.5s, opacity 0.5s;
        overflow: visible !important;
        height: auto !important;
      }
      &.panel-opening {
        overflow: hidden;
      }
      &.panel-switch {
        transition: opacity 0.5s !important;
        width: 280px !important;
      }
      &:not(.panel-visible) {
        width: 0;
        margin-left: 0;
        opacity: 0;
        height: 0;
        overflow: hidden;
      }
    }
  }
  &.right-panel-visible {
    .right-panel-list {
      width: 280px;
      margin-left: 15px;
    }
  }
  &.panel-closing {
    .right-panel-list {
      transition: width 0.5s ease-in-out 0.5s, margin-left 0.5s ease-in-out 0.5s;
      overflow: visible !important;
      height: auto !important;
    }
  }
  .right-panel-backdrop {
    display: none;
  }

  @include media-breakpoint-down(sm) {
    .right-panel-list {
      position: absolute;
      top: 0;
      right: 0;
      z-index: 1001;
      height: 100%;
      .right-panel {
        transition: opacity 0.5s;
        width: 280px !important;
        .right-panel-container {
          background: #e6eff5;
          padding-top: 0 !important;
          &:before {
            display: none;
          }
          .commentsListMainContainer {
            height: calc(100% - 33px);
            overflow: auto;
          }
        }
        .context-mode {
          padding-top: 0 !important;
          .commentsListMainContainer {
            height: 100%;
          }
        }
      }
    }
    .right-panel-backdrop {
      display: block;
      opacity: 0;
      transition: opacity 0.5s;
      position: absolute;
      z-index: 1000;
      height: 0;
      width: 0;
      left: 0;
      top: 0;
      background: rgba(192, 192, 192, 0.9);
      content: "";
      i {
        cursor: pointer;
        margin: 12px;
        font-size: 24px;
      }
    }
    &.right-panel-visible {
      .right-panel-backdrop {
        opacity: 1;
        height: 100%;
        width: 100%;
      }
      .right-panel {
        height: 100%;
        > * {
          height: 100%;
          .right-panel-container {
            height: 100%;
          }
        }
      }
    }
  }
}
.entry-words-container {
  opacity: 1;
  display: block;
  .words-container-title {
    display: flex;
    justify-content: space-between;
    padding: 0;
    border-radius: $border-radius $border-radius 0 0;
    > div {
        padding: 0.75rem 1.25rem;
    }
    button {
      width: 65px;
      background: $Downriver;
      cursor: pointer;
      &:hover {
        background: darken($Downriver, 15%);
      }
      i {
        font-size: 24px;
      }
      @include media-breakpoint-down(md) {
        width: 48px;
        i {
          font-size: 20px;
        }
      }
      @include media-breakpoint-down(xs) {
        width: 38px;
      }
    }
  }
  .words-search {
    background: $WildSand;
    border: 1px solid $line-color;
    border-top: 0;
    width: 100%;
    display: flex;
    position: relative;
    > .btn {
      flex: 0 0 110px;
      border-radius: 0;
      cursor: pointer;
      background: transparent;
      color: $Eden;
      font-size: 14px;
      line-height: 45px;
      padding: 0;
      i {
        font-size: 20px;
        position: relative;
        top: 2px;
        padding-left: 5px;
      }
    }
  }
  .word-form-filters {
    .sortfilter-form {
      border: 1px solid $line-color;
      padding: 0.7em 1.25em 1.2em;
      margin: 0;
      font-size: 14px;
      background: #E5E5E5;
      &:first-child {
        border-bottom: 0;
      }
      .sortfilter-control {
        width: 150px;
        font-size: 14px;
      }
      .form-inline {
        label {
          cursor: pointer;
          margin-left: 7px;
        }
        select {
          margin: 0 5px 5px 0;
        }
        .btn {
          cursor: pointer;
        }
      }
      input[type=checkbox] {
        margin-right: 5px;
      }
      @include media-breakpoint-down(lg) {
        .sortfilter-control {
          margin: 0 0 5px;
          width: 100%;
        }
        .form-inline {
          label {
            margin: 0;
          }
        }
      }
    }
  }
  .lexiconItemListContainer {
    .list-group-item:first-child {
      border-top: 0;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }
}

.filter-entries {
  width: 100%;
  border: 0;
  background: transparent;
  border-radius: 0;
  font-size: 14px;
  line-height: 45px;
  padding: 0 2.5em 0 1.5em;
}

.filter-entries-wrapper {
  flex-grow: 1;
  border-right: 1px solid $Downriver;
}

.lexiconListItemCompact {
    position: relative;
    overflow-y: hidden;
    min-height: 40px;
    height: 55px;
    border-bottom: solid 1px darkgrey;
    width: 100%;
    line-height: 1.2em;
}

.lexiconItemListContainer .selected {
    background-color: $lf-highlight;
}

.lexiconItemListContainer .listItemHasComment {
    border-right: solid 5px $lf-comments;
}

.entryItemView {
    /*  TODO: review this in light of animation and the footer staying at the bottom. IJH 2014-09
        The view is used in edit and comment view */

    min-height: 580px;
  .field-container {
    position: relative;
    .comment-bubble-group {
      position: relative;
    }
  }
  .comment-bubble-entry {
    position: absolute;
    right: 5px;
    top: 6px;
  }
  @include media-breakpoint-down(md) {
    .dc-multitext,
    .dc-multioptionlist,
    .dc-pictures,
    .dc-optionlist,
    .dc-semanticdomain {
      .comment-bubble-group:first-child {
        .commentBubbleContainer {
          top: 44px;
        }
      }
    }
  }
  .dc-example {
    .commentBubbleContainer {
      right: -41px;
    }
  }
  .dc-pictures {
    .commentBubbleContainer {
      right: -35px;
    }
    .dc-multitext {
      .commentBubbleContainer {
        right: -20px;
      }
    }
  }
}

.entryItemView {
    i.fa-times {
        cursor: pointer;
        color: #888;
    }
    button i.fa-times {
        color: inherit;
    }
}

#lexAppCommentView .commentCount {
    color: $lf-comments;
    font-weight: bold;
    padding: 5px;
    width: 120px;
    text-align: right;
}

#lexAppCommentView form.dc-multitext .uneditable-input {
    height: 20px;
    overflow: hidden;
}

#lexAppCommentView form.dc-multitext .uneditable-input:hover {
    cursor: pointer;
}

#lexAppCommentView .dc-multioptionlist-value,
.commentRegarding .dc-multioptionlist-value {
    background-color: inherit;
    width: inherit;
}

#lexAppCommentView .commentListView img,
.commentRegarding img {
    width: 50px;
}

form.submitted .ng-invalid {
    border: 1px solid #f00;
}
